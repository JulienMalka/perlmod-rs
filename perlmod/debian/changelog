rust-perlmod (0.5.0-1) stable; urgency=medium

  * add support for deserializing PVLV magic (lvalues)

 -- Proxmox Support Team <support@proxmox.com>  Mon, 21 Jun 2021 12:38:48 +0200

rust-perlmod (0.4.3-1) stable; urgency=medium

  * fix an issue with serializing empty arrays

 -- Proxmox Support Team <support@proxmox.com>  Tue, 09 Mar 2021 15:35:59 +0100

rust-perlmod (0.4.2-1) stable; urgency=medium

  * allow scalars with magic in deserialization

  * bump macro to 0.3.1

 -- Proxmox Support Team <support@proxmox.com>  Tue, 23 Feb 2021 14:25:34 +0100

rust-perlmod (0.4.1-1) stable; urgency=medium

  * fix a refcount issue with Hash::insert_by_value

 -- Proxmox Support Team <support@proxmox.com>  Tue, 16 Feb 2021 12:37:43 +0100

rust-perlmod (0.4.0-1) stable; urgency=medium

  * depend on perlmod-macro 0.3.0

 -- Proxmox Support Team <support@proxmox.com>  Tue, 16 Feb 2021 10:44:08 +0100

rust-perlmod (0.3.0-1) stable; urgency=medium

  * breaking change to destructor macro due to compiler restructions

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Feb 2021 16:05:44 +0100

rust-perlmod (0.2.3-1) stable; urgency=medium

  * fix an issue with deserializing 'undef' values

  * bump macro dependency

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Feb 2021 14:55:45 +0100

rust-perlmod (0.2.2-1) stable; urgency=medium

  * `#[export]` fns now accept a `#[try_from_ref]` attribute on parameters

  * improve documentation

 -- Proxmox Support Team <support@proxmox.com>  Wed, 09 Dec 2020 09:23:46 +0100

rust-perlmod (0.2.1-1) stable; urgency=medium

  * depend on perlmod-macro 0.2.1: non-debug builds don't include
    `-L./target/debug` in their perl modules anymore

  * support deserializing borrowed strings (mostly useful for exporter
    function parameters)

 -- Proxmox Support Team <support@proxmox.com>  Fri, 27 Nov 2020 14:34:44 +0100

rust-perlmod (0.2.0-1) stable; urgency=medium

  * add convenience methods for raw pointer types

  * support blessed values

  * support deserializing by reference to allow `&[u8]` parameters
    introduces: perlmod::from_ref_value(&Value)

  * improve documentation and examples

  * make `SvPVbyte` in `Value`s safe by checking whether they can be converted
    first (otherwise it could potentially trigger a `longjmp`)

  * add `destructor!` convenience macro

  * `Serializer` and `Deserializer` & helper types are now private

 -- Proxmox Support Team <support@proxmox.com>  Thu, 26 Nov 2020 13:51:51 +0100

rust-perlmod (0.1.0-1) stable; urgency=medium

  * initial packaging

 -- Proxmox Support Team <support@proxmox.com>  Fri, 20 Nov 2020 13:55:27 +0100
